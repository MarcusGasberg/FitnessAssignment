[{"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\index.tsx":"1","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\reportWebVitals.ts":"2","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\App.tsx":"3","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Utils.ts":"4","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\Game.tsx":"5","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\Grid.tsx":"6","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\GridTile.tsx":"7","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\GameControls.tsx":"8","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\GameLogic.tsx":"9","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Login.tsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2585,"mtime":1607542774517,"results":"14","hashOfConfig":"12"},{"size":198,"mtime":1607096236123,"results":"15","hashOfConfig":"12"},{"size":2138,"mtime":1607542627536,"results":"16","hashOfConfig":"12"},{"size":1369,"mtime":1607541845966,"results":"17","hashOfConfig":"12"},{"size":1010,"mtime":1607541701499,"results":"18","hashOfConfig":"12"},{"size":2311,"mtime":1607541701151,"results":"19","hashOfConfig":"12"},{"size":3190,"mtime":1607541701232,"results":"20","hashOfConfig":"12"},{"size":1443,"mtime":1607542895921,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13nj4xb",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\index.tsx",[],["45","46"],"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\reportWebVitals.ts",[],"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\App.tsx",["47","48"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Game from \"./Game/Game\";\nimport GameControls from \"./Game/GameControls\";\nimport { GameLogic } from \"./Game/GameLogic\";\nimport { Subscription } from \"rxjs\";\nimport { Switch, Route, Link, Router, BrowserRouter } from \"react-router-dom\";\nimport Login from \"./Login\";\n\nexport interface IState {\n  rows: number;\n  cols: number;\n  score: number;\n  isPlaying: boolean;\n  gameLogic: GameLogic;\n  sub: Subscription;\n  sequenceInterval: number;\n}\n\nclass App extends React.Component<{}, IState> {\n  constructor(props: any) {\n    super(props);\n    const rows = 3;\n    const cols = 3;\n    const sequenceInterval = 2500;\n    const gameLogic = new GameLogic(rows, cols, sequenceInterval);\n\n    const sub = gameLogic.getScore().subscribe((score) => {\n      this.setState({ score });\n    });\n\n    this.state = {\n      rows,\n      cols,\n      score: 0,\n      isPlaying: false,\n      gameLogic,\n      sub,\n      sequenceInterval,\n    };\n\n    this.onGuessPosition = this.onGuessPosition.bind(this);\n    this.onGuessSound = this.onGuessSound.bind(this);\n    this.onPause = this.onPause.bind(this);\n    this.onPlay = this.onPlay.bind(this);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1 className=\"App-title\">Welcome to Dual-n-Back</h1>\n          </header>\n          <Switch>\n            <Route path=\"/login\">\n              <Login></Login>\n            </Route>\n            <Route path=\"/game\">\n              <Game\n                rows={this.state.rows}\n                cols={this.state.cols}\n                score={this.state.score}\n                isPlaying={this.state.isPlaying}\n                speedMs={10000}\n                gameLogic={this.state.gameLogic}\n              ></Game>\n              <GameControls\n                isPlaying={this.state.isPlaying}\n                guessPosition={this.onGuessPosition}\n                guessSound={this.onGuessSound}\n                play={this.onPlay}\n                pause={this.onPause}\n              ></GameControls>\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n\n  private onPause() {\n    this.setState({ isPlaying: false });\n  }\n\n  private onPlay() {\n    this.setState({ isPlaying: true });\n  }\n\n  private onGuessPosition() {\n    this.state.gameLogic.guessPosition();\n  }\n\n  private onGuessSound() {\n    this.state.gameLogic.guessPosition();\n  }\n}\n\nexport default App;\n","E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Utils.ts",[],"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\Game.tsx",[],"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\Grid.tsx",[],"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\GridTile.tsx",[],["49","50"],"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\GameControls.tsx",[],"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Game\\GameLogic.tsx",[],"E:\\Marcus\\source\\repos\\FitnessAssignment\\src\\app\\src\\Login.tsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":8,"column":25,"nodeType":"57","messageId":"58","endLine":8,"endColumn":29},{"ruleId":"55","severity":1,"message":"59","line":8,"column":31,"nodeType":"57","messageId":"58","endLine":8,"endColumn":37},{"ruleId":"51","replacedBy":"60"},{"ruleId":"53","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.",["62"],["63"],"no-global-assign","no-unsafe-negation"]